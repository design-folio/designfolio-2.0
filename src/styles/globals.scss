@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  input:-webkit-autofill,
  input:-webkit-autofill:hover,
  input:-webkit-autofill:focus,
  input:-webkit-autofill:active {
    -webkit-background-clip: text;
    -webkit-text-fill-color: hsl(var(--foreground));
    transition: background-color 5000s ease-in-out 0s;
    box-shadow: inset 0 0 20px 20px transparent;
  }

  :root {
    --background: #f2f2f0;
    --background-landing: 38 30% 97%;
    --foreground: #202937;
    --foreground-landing: 0 0% 6%;
    --card: #f5f3ef; //#ffffff
    --card-foreground: #202937;
    --card-border: #e5e7eb;
    --primary: #f5f5f7;
    --primary: 221 83% 53%;
    --primary-landing: 221 83% 53%;
    --primary-foreground: #202937;
    --primary-hover: #e5e5e7;
    --secondary: #fafafa;
    --secondary-foreground: #202937;
    --secondary-hover: #f5f5f5;
    --secondary-border: #e5e7eb;
    --secondary-border-hover: #d1d5db;
    --muted: 38 14% 90%;
    --muted-foreground: 0 0% 35%;
    --radius: 0.5rem;
    --border: 38 15% 88%;
    /* Elevation system */
    --elevate-1: rgba(0, 0, 0, 0.03);
    --elevate-2: rgba(0, 0, 0, 0.08);
  }

  [data-theme="dark"] {
    --background: #13151a;
    --background-landing: 0 0% 7%;
    --primary-landing: 221 83% 53%;
    --foreground: #e9eaeb;
    --foreground-landing: 0 0% 95%;
    --card: #1d1f27;
    --card-foreground: #e9eaeb;
    --card-border: #2f323d;
    --primary: #262832;
    --primary-foreground: #f9f9fb;
    --primary-hover: #4a4e5d;
    --secondary: #17181d;
    --secondary-foreground: #f9f9fb;
    --secondary-hover: #22242b;
    --secondary-border: #262832;
    --secondary-border-hover: #565b6c;
    --muted: 0 0% 16%;
    --muted-foreground: 0 0% 65%;
    --border: 0 0% 18%;
    /* Elevation system for dark mode */
    --elevate-1: rgba(255, 255, 255, 0.04);
    --elevate-2: rgba(255, 255, 255, 0.09);
  }

  * {
    scroll-behavior: smooth;
  }

  body {
    @apply bg-background text-foreground transition-colors duration-300;
  }
}

/* Force dark mode text colors */
[data-theme="dark"] .text-gray-400 {
  color: rgb(156 163 175) !important;
}

[data-theme="dark"] .text-gray-600 {
  color: rgb(156 163 175) !important;
}

/* Force dark mode background colors */
[data-theme="dark"]\:bg-secondary:is([data-theme="dark"] *) {
  background-color: var(--secondary);
}

/* Apply styles to the specific component */
.bg-card[data-theme="dark"]\:bg-secondary.border.border-card-border[data-theme="dark"]\:border-secondary-border.rounded-xl.p-3.shadow-\[0px_0px_16\.4px_0px_rgba\(0\,0\,0\,0\.02\)\] {
  background-color: var(--card);
}

[data-theme="dark"]
  .bg-card[data-theme="dark"]\:bg-secondary.border.border-card-border[data-theme="dark"]\:border-secondary-border.rounded-xl.p-3.shadow-\[0px_0px_16\.4px_0px_rgba\(0\,0\,0\,0\.02\)\] {
  background-color: var(--secondary);
}

@import url("./colors.css");
@import url("./animation.css");

:root {
  --cursor-default: default;
  --cursor-pointer: pointer;
  --cursor-not-allowed: not-allowed;
  --cursor-grab: "grab";
  --cursor-grabbing: "grabbing";
}

*,
*:before,
*:after {
  @apply cursor-default;
}

svg,
svg * {
  cursor: pointer;
}

html {
  scroll-behavior: smooth;
  background-color: var(--df-bg-color);
  min-height: 100vh;
}

body {
  overflow-y: scroll;
  min-height: 100vh;
}

*:focus {
  outline: none;
}

/* Hide scrollbar for Chrome, Safari and Opera */
.hide-scrollbar::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.hide-scrollbar {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

.text-input {
  padding: 16px;
  border-radius: 16px;
  border: 2px solid var(--input-border-color);
  background: var(--input-bg-color);
  color: var(--input-text-color);
  font-family: var(--font-inter);
  font-size: 16px;
  font-style: normal;
  line-height: normal;
  width: 100%;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.15s;
}

.modal-button {
  background-color: #202937 !important;
  color: #fff !important;
}

[data-theme="dark"] .text-input {
  background-color: #363a48;
  color: white !important;
  border-color: #363a48;
}
[data-theme="dark"] .text-input:focus {
  border-color: #b4bace !important;
}
[data-theme="dark"] .modal-button {
  background-color: #ffffff !important;
  color: #202937 !important;
}
.text-input:focus {
  border-color: var(--input-border-focus-color);
  box-shadow: var(--input-border-focus-shadow);
}

.text-input:hover {
  box-shadow: var(--input-border-hover-shadow);
}

input::placeholder {
  color: var(--input-placeholder-color);
  opacity: 1; /* Firefox */
}

input::-ms-input-placeholder {
  /* Edge 12-18 */
  color: var(--input-placeholder-color);
}

.error-message {
  color: var(--input-error-color);
  margin-top: 8px;
  font-size: 14px;
  font-weight: 500;
}

.webkit-fill {
  @apply w-full; /* Optional: Apply Tailwind's full width class */
  width: -webkit-fill-available;
}

@keyframes slide-up {
  0% {
    transform: translateY(100%);
  }
  100% {
    transform: translateY(0);
  }
}

@keyframes slide-down {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(0);
  }
}

.animate-slide-down {
  animation: slide-down 0.2s ease-in-out forwards;
}

.animate-slide-up {
  animation: slide-up 0.2s ease-in-out forwards;
}

.toggle-container {
  position: relative;
  width: 52px;
  height: 32px;
}

.toggle-input {
  display: none;
}

.toggle-label {
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: relative;
  width: 100%;
  height: 100%;
  background-color: #556379;
  border-radius: 50px;
  cursor: pointer;
  transition: background-color 0.1s ease-in-out;
  padding-left: 4px;
}

.toggle-ball {
  position: absolute;
  width: 24px;
  height: 24px;
  background-color: #fff;
  border-radius: 50%;

  transition: transform 0.1s ease-in-out;
}

.toggle-icon {
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16px;
  opacity: 0;
  transition: opacity 0.1s ease-in-out;
}

.toggle-input:checked + .toggle-label {
  background-color: #ff553e;
}

.toggle-input:checked + .toggle-label .toggle-ball {
  transform: translateX(20px);
}

.toggle-input:checked + .toggle-label .toggle-icon.sun {
  opacity: 1;
}

.toggle-input:checked + .toggle-label .toggle-icon.moon {
  opacity: 0;
}

.largeCheckbox {
  transform: scale(1.5); /* Adjust the scale factor as needed */
  margin-right: 5px;
  cursor: pointer;
}

.select-container {
  position: relative;
  /* width: 200px; */
  display: inline-block;
}

/* Hide the default select arrow */
.custom-select {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}

/* Custom icon */
.select-container::after {
  content: "";
  position: absolute;
  right: 10px;
  top: 35px;
  transform: translateY(-50%);
  width: 20px; /* Width of your icon */
  height: 20px; /* Height of your icon */
  background-image: url("/assets/svgs/arrow-down.svg"); /* Path to your custom icon */
  background-size: cover;
  pointer-events: none; /* Makes it non-interactive */
}

.project-editor {
  // overflow-x: auto;
  position: relative;
  will-change: transform, opacity;
  word-wrap: break-word;

  .figma-tool {
    margin: 15px 0;
  }

  .figma-tool textarea {
    width: 100%;
    height: 100px;
    box-sizing: border-box;
    padding: 8px;
  }

  .figma-tool .figma-preview iframe {
    width: 100%;
    height: 450px; /* Adjust height as needed */
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 20px;
  }

  .figma-tool .figma-preview {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .ce-popover--opened {
    max-height: none;
  }
  .table-wrapper {
    overflow-x: auto; /* Enable horizontal scrolling */
    overflow-y: hidden; /* Hide vertical scrollbar if not needed */
    width: 100%; /* Take full width of the container */
    -webkit-overflow-scrolling: touch; /* For smooth scrolling on iOS */
    -ms-overflow-style: none; /* Hide scrollbar in IE/Edge */
    scrollbar-width: none; /* Hide scrollbar in Firefox */
    padding-right: 8px;
  }

  table {
    width: 100%; /* Ensure the table takes up the full width of the table-wrapper */
    border-collapse: collapse; /* Optional: Collapse borders for better visual */
  }

  th,
  td {
    border: 1px solid #ccc; /* Add borders for clarity */
    padding: 8px; /* Add some padding for readability */
  }
  h1 {
    font-size: 24px; /* 32px if the base font size is 16px */
    margin-top: 0.67em;
    margin-bottom: 0.67em;
    font-weight: 600;
    color: #202937;
  }

  h2 {
    font-size: 24px; /* 32px if the base font size is 16px */
    margin-top: 0.67em;
    margin-bottom: 0.67em;
    font-weight: 600;
    color: #202937;
  }

  h3 {
    font-size: 1.17em; /* roughly 18.72px if the base font size is 16px */
    margin-top: 1em;
    margin-bottom: 1em;
    font-weight: 600;
    color: #202937;
  }

  h4 {
    font-size: 1em; /* 16px if the base font size is 16px */
    margin-top: 1.33em;
    margin-bottom: 1.33em;
    font-weight: 600;
    color: #202937;
  }

  h5 {
    font-size: 0.83em; /* roughly 13.28px if the base font size is 16px */
    margin-top: 1.67em;
    margin-bottom: 1.67em;
    font-weight: 500;
    color: #202937;
  }

  h6 {
    font-size: 0.67em; /* roughly 10.72px if the base font size is 16px */
    margin-top: 2.33em;
    margin-bottom: 2.33em;
    font-weight: 400;
    color: #202937;
  }
  .ce-paragraph,
  p,
  ol,
  ul,
  menu {
    font-weight: 400;
    font-size: 16px;
    color: #4d545f !important;
    line-height: 22.4px;
  }
  p,
  ol,
  ul,
  menu {
    margin-top: 12px;
  }
  ol {
    list-style: decimal;
  }
  ul {
    list-style-type: disc;
  }
  a {
    text-decoration: underline;
  }
  table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0; /* Adjusted to remove space between cells */
    border: solid 1px #e5e7eb;
    border-radius: 12px;
    overflow: hidden; /* Ensures the border-radius is applied properly */
  }

  figure {
    margin-top: 20px;
  }

  table th,
  table td {
    padding: 8px 20px;
    text-align: left;
    border-left: solid 1px #e5e7eb; /* Adds vertical border */
    border-bottom: solid 1px #e5e7eb;
  }

  /* First cell of each row: reset left border for clean appearance */
  table th:first-child,
  table td:first-child {
    border-left: none;
  }

  /* Remove bottom border for the last row to avoid merging with the table border */
  table tr:last-child td {
    border-bottom: none;
  }

  /* Applying border-radius to the first and last th of the first row */
  table thead th:first-child {
    border-top-left-radius: 8px;
  }

  table thead th:last-child {
    border-top-right-radius: 8px;
  }

  /* Applying border-radius to the first and last td of the last row */
  table tbody tr:last-child td:first-child {
    border-bottom-left-radius: 8px;
  }

  table tbody tr:last-child td:last-child {
    border-bottom-right-radius: 8px;
  }

  .ce-block__content,
  .ce-toolbar__content {
    max-width: calc(100% - 80px) !important;
  }
  .cdx-block {
    max-width: 100% !important;
  }

  figure {
    img {
      margin: 12px auto;
      width: 100%;
      border-radius: 20px;
    }
    iframe {
      height: 450px;
      width: 100%;
      border-radius: 20px;
    }
  }
  figcaption {
    margin: 10px 0;
    color: #788095;
    font-size: 13px;
    text-align: center;
  }
}

[data-theme="dark"] {
  html {
    background-color: var(--df-bg-color);
  }
  .toggle-label {
    background-color: #363a48;
  }

  .ce-popover-item__icon,
  .tc-popover__item-icon {
    background: #fff;
    border-radius: 4px;
  }
  .tc-popover__item-icon {
    color: #000;
  }

  .ce-popover__container {
    background-color: #13151a !important;
    border-color: #13151a !important;
  }
  .editor-container {
    .ce-block--selected .ce-block__content,
    .ce-inline-toolbar,
    .codex-editor--narrow .ce-toolbox,
    .ce-conversion-toolbar,
    .ce-settings,
    .ce-settings__button,
    .ce-toolbar__settings-btn,
    .cdx-button,
    .ce-popover,
    .tc-popover,
    .ce-toolbar__plus:hover {
      background: #13151a;
      color: #fff;
      border: transparent;
    }

    .ce-inline-tool,
    .ce-conversion-toolbar__label,
    .ce-toolbox__button,
    .cdx-settings-button,
    .ce-popover__items,
    .ce-popover-item__title,
    .ce-toolbar__plus {
      color: #fff;
    }

    .ce-popover-item:hover {
      background-color: #414453;
    }
    .ce-popover__search {
      background-color: #2c2e3a;
    }

    ::selection {
      background: #414453;
    }

    .cdx-settings-button:hover,
    .ce-settings__button:hover,
    .ce-toolbox__button--active,
    .ce-toolbox__button:hover,
    .cdx-button:hover,
    .ce-inline-toolbar__dropdown:hover,
    .ce-inline-tool:hover,
    .ce-popover__item:hover,
    .ce-toolbar__settings-btn:hover {
      background-color: #414453;
      color: #fff;
    }

    .cdx-notify--error {
      background: #fb5d5d !important;
    }

    .cdx-notify__cross::after,
    .cdx-notify__cross::before {
      background: #414453;
    }

    .ce-paragraph,
    .cdx-marker,
    .ce-block,
    .ce-block__content,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    .cdx-nested-list {
      color: #e9eaeb !important;
    }
  }

  .ce-inline-tool-input {
    color: #13151a !important;
  }

  .project-editor {
    will-change: transform, opacity;
    position: relative;
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    .ce-paragraph,
    p,
    ol,
    ul,
    menu,
    .cdx-nested-list,
    table th,
    table td {
      color: #e9eaeb !important;
    }

    figure {
      margin-top: 20px;
    }
  }

  [data-tune="divider"] svg {
    fill: white; /* Change the color to white */
  }
}

/* Hide .toast-container */
.toast-container {
  display: none !important;
}

input {
  cursor: text; /* This ensures the text cursor is used for input fields */
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {
  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {
  }

  .no-default-active-elevate {
  }

  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: -1;
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: 999;
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Animated gradient border */
  @keyframes gradient-rotate {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .gradient-border-animate {
    background: linear-gradient(
      90deg,
      hsl(9 60% 92%),
      hsl(9 100% 62%),
      hsl(9 60% 92%),
      hsl(9 100% 62%)
    );
    background-size: 300% 100%;
    animation: gradient-rotate 8s ease infinite;
  }

  /* Infinite scroll animation */
  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .animate-scroll {
    animation: scroll 30s linear infinite;
  }
}
